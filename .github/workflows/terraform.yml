---
name: Terraform

on:
  push:
    branches:
      - 'main'  # excludes main
  pull_request:
    branches:
      - main

jobs:
  plan:
    runs-on:
      - self-hosted
      - refarch
    env:
      working-directory: .
    steps:
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.5

      - name: Setup SSH Keys and known_hosts
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        #  Copied from https://github.com/maddox/actions/blob/master/ssh/entrypoint.sh
        run: |
          SSH_PATH="$HOME/.ssh"

          mkdir -p "$SSH_PATH"
          touch "$SSH_PATH/known_hosts"

          echo "$PRIVATE_KEY" > "$SSH_PATH/id_rsa"

          chmod 700 "$SSH_PATH"
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 600 "$SSH_PATH/known_hosts"
          chmod 400 "$SSH_PATH/id_rsa"

          eval $(ssh-agent)
          ssh-add "$SSH_PATH/id_rsa"
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SF_REF_ARCH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SF_REF_ARCH_SECRET_ACCESS_KEY }}

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SF_REF_ARCH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SF_REF_ARCH_SECRET_ACCESS_KEY }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SF_REF_ARCH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SF_REF_ARCH_SECRET_ACCESS_KEY }}

      - name: Terraform Workspace List
        id: workspace_list
        run: terraform workspace list
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SF_REF_ARCH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SF_REF_ARCH_SECRET_ACCESS_KEY }}

      - name: Terraform Workspace Create
        id: workspace_create
        run: terraform workspace new dev > /dev/null 2>&1 || true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SF_REF_ARCH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SF_REF_ARCH_SECRET_ACCESS_KEY }}

      - name: Terraform Workspace Select
        id: workspace_select
        run: terraform workspace select dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SF_REF_ARCH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SF_REF_ARCH_SECRET_ACCESS_KEY }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file=dev.tfvars -no-color
        continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SF_REF_ARCH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SF_REF_ARCH_SECRET_ACCESS_KEY }}
  apply:
    needs: [plan]
    runs-on:
      - self-hosted
      - refarch
    env:
      working-directory: .
    steps:
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.5

      - name: Setup SSH Keys and known_hosts
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        #  Copied from https://github.com/maddox/actions/blob/master/ssh/entrypoint.sh
        run: |
          SSH_PATH="$HOME/.ssh"

          mkdir -p "$SSH_PATH"
          touch "$SSH_PATH/known_hosts"

          echo "$PRIVATE_KEY" > "$SSH_PATH/id_rsa"

          chmod 700 "$SSH_PATH"
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 600 "$SSH_PATH/known_hosts"
          chmod 400 "$SSH_PATH/id_rsa"

          eval $(ssh-agent)
          ssh-add "$SSH_PATH/id_rsa"
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SF_REF_ARCH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SF_REF_ARCH_SECRET_ACCESS_KEY }}

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SF_REF_ARCH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SF_REF_ARCH_SECRET_ACCESS_KEY }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SF_REF_ARCH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SF_REF_ARCH_SECRET_ACCESS_KEY }}

      - name: Terraform Workspace List
        id: workspace_list
        run: terraform workspace list
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SF_REF_ARCH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SF_REF_ARCH_SECRET_ACCESS_KEY }}

      - name: Terraform Workspace Create
        id: workspace_create
        run: terraform workspace new dev > /dev/null 2>&1 || true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SF_REF_ARCH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SF_REF_ARCH_SECRET_ACCESS_KEY }}

      - name: Terraform Workspace Select
        id: workspace_select
        run: terraform workspace select dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SF_REF_ARCH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SF_REF_ARCH_SECRET_ACCESS_KEY }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file=dev.tfvars -no-color
        continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SF_REF_ARCH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SF_REF_ARCH_SECRET_ACCESS_KEY }}

      - name: Terraform Apply
        id: apply
        run: terraform apply -var-file=dev.tfvars -no-color -auto-approve
        continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SF_REF_ARCH_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SF_REF_ARCH_SECRET_ACCESS_KEY }}
